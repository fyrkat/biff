#! /usr/pkg/bin/perl
#
# $Id: mk-conf,v 1.6 2016/09/30 14:55:24 jornane Exp $
#

sub emit_warning {

	printf("// WARNING! This file is automatically generated\n");
	printf("// DO NOT EDIT!\n\n");
}

sub emit_options {

	open(IN, "options") || die "Could not open 'options': $!\n";
	while(<IN>) {
		printf("%s", $_);
	}
	close(IN);
}

sub zone_file {
	my($z) = @_;

	$z =~ s/.in-addr.arpa$//;
	return $z;
}

sub emit_masters {
	my($z, $f);

	open(IN, "masters") || die "Could not open 'masters': $!\n";
	printf("\n//\n// master zones\n//\n");
	while(<IN>) {
		chomp;
		$_ =~ s/;.*$//;         # comments
		$_ =~ s/^\s*//;         # leading...
		$_ =~ s/\s*$//;         # ...and trailing whitespace
		if (/^$/) { next; }
		@_ = split;
		$z = $_[0];
		$f = &zone_file($z);
		shift @_;
		my $sign = 0;
		foreach my $kw (@_) {
			if ($kw eq "sign") { # only keyword understood so far
				$sign = 1;
			}
		}
		printf("zone \"%s\" {\n", $z);
		printf("\ttype master;\n\tfile \"pz/%s\";\n", $f);
		if ($sign) {
			#printf("\talso-notify {\n");
			#printf("\t\t192.0.2.53;\n");
			#printf("\t};\n");
		}
		printf("};\n");
	}
	close(IN);
}

sub emit_slaves {
	my($z, $f, $m);

	open(IN, "slaves") || die "Could not open 'slaves': $!\n";
	printf("\n//\n// slave zones\n//\n");
	while(<IN>) {
		chop;
		$_ =~ s/;.*$//;         # comments
		$_ =~ s/^\s*//;         # leading...
		$_ =~ s/\s*$//;         # ...and trailing whitespace
		if (/^$/) { next; }
		@_ = split;
		$z = shift(@_);
		$f = &zone_file($z);
		printf("zone \"%s\" {\n", $z);
		printf("\ttype slave;\n\tfile \"sz/%s\";\n", $f);
		printf("\tmasters { ");
		while($m = shift(@_)) {
			printf("%s; ", $m);
		}
		printf("};\n};\n");
	}
	close(IN);
}

#
# Main
#

&emit_warning();
&emit_options();
&emit_masters();
&emit_slaves();
